 CRUD
************************** C=create
 to create a user we can use user.create method 
 
 
 app.post('/register', async (req,res)=>{
    //this is called destructuring
    const {username,password,email}=req.body

    //cretaing new user
    const newuser= await userModel.create({
        username:username,
        password:password,
        email:email,
    })

    res.send(newuser)

})


********************************R=read
to read a data from data base we use find or findone method
find method return all the data which matches the condition and if condition doesnt match then it will send at empty array
or findOne only return one data based on query and return null if doesnt find anything related to query 

//read operation
app.get('/get-users',(req,res)=>{
  
    userModel.find({
        username:'chikoo'
    }).then((user)=>{
        res.send(user)

    })
})
app.get('/get-users',(req,res)=>{
  
    userModel.findOne({
        username:'chikoo'
    }).then((user)=>{
        res.send(user)

    })
})


**************************U=update
update is a aync operation used to update data 


app.get('/update-user', async (req,res)=>{
    await userModel.findOneAndUpdate({
        username:"chikoo"
    },{
        email:"nikhil@22228"
    })
    res.send("user updated")
})
findOneAndUpdate({what to update},{value})



*******************************D=delete.
app.get('/delete-user',async (req,res)=>{
    await userModel.findOneAndDelete({
        username:"chikoo"
    })
    res.send('userdeleted')
})